{"version":3,"sources":["consumer-object.js","consumer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;IAIa,yBAAA;;;;;;;AAMX,0BAAY,IAAZ,EAAmB,QAAnB,EAA6B;AAAA;;AAC3B,QAAI,OAAO,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAK,gBAAL,CAAsB,IAAtB;AACD;;AAED,QAAI,OAAO,QAAP,KAAoB,WAAxB,EAAqC;AACnC,WAAK,QAAL,GAAgB,QAAhB;AACD;AACF;;;;;;;;;;qCAMgB,MAAM;AACrB,UAAI,OAAO,OAAO,IAAP,CAAY,IAAZ,CAAX;;AAEA,WAAK,IAAI,CAAT,IAAc,IAAd,EAAoB;AAClB,YAAI,MAAM,KAAK,CAAL,CAAV;AACA,aAAK,GAAL,IAAY,KAAK,GAAL,CAAZ;AACD;AACF;;;;;;;;;;;;;;AC/BH;;AACA;;;;;;;;;IAOa,mBAAA;;;;;;;;;;;;;AAmBT,sBAAY,QAAZ,EAAsB,WAAtB,EAAmC;AAAA;;AAAA;;AAAA,aAjBnC,QAiBmC,GAjBxB,EAiBwB;AAAA,aAdnC,WAcmC,GAdrB,EAcqB;AAAA,aAXnC,MAWmC,GAX1B,6BAAiB,SAAjB,CAA2B,aAAK;AACrC,cAAE,WAAF,CAAc,MAAK,QAAnB;AACH,SAFQ,CAW0B;;AAC/B,aAAK,QAAL,GAAgB,QAAhB;AACA,aAAK,WAAL,GAAmB,WAAnB;;AAEA;AACH;;;;;;;;;;;;;;;;kCAOiB;AAAA,gBAAX,IAAW,yDAAJ,EAAI;;AACd,mBAAO,KAAK,OAAL,CAAa,QAAb,EAAuB,IAAvB,EAA6B,EAA7B,CAAP;AACH;;;;;;;;;;;8BAQ0B;AAAA,gBAAvB,IAAuB,yDAAhB,EAAgB;AAAA,gBAAZ,KAAY,yDAAJ,EAAI;;AACvB,mBAAO,KAAK,OAAL,CAAa,KAAb,EAAoB,IAApB,EAA0B,KAA1B,CAAP;AACH;;;;;;;;;;;gCAQ2B;AAAA,gBAAtB,IAAsB,yDAAf,EAAe;AAAA,gBAAX,IAAW,yDAAJ,EAAI;;AACxB,mBAAO,KAAK,OAAL,CAAa,OAAb,EAAsB,IAAtB,EAA4B,IAA5B,CAAP;AACH;;;;;;;;;;;+BAQ0B;AAAA,gBAAtB,IAAsB,yDAAf,EAAe;AAAA,gBAAX,IAAW,yDAAJ,EAAI;;AACvB,mBAAO,KAAK,OAAL,CAAa,MAAb,EAAqB,IAArB,EAA2B,IAA3B,CAAP;AACH;;;;;;;;;;;8BAQyB;AAAA,gBAAtB,IAAsB,yDAAf,EAAe;AAAA,gBAAX,IAAW,yDAAJ,EAAI;;AACtB,mBAAO,KAAK,OAAL,CAAa,KAAb,EAAoB,IAApB,EAA0B,IAA1B,CAAP;AACH;;;;;;;;;;;gCAQO,QAAQ,MAAM,MAAM;AACxB,gBAAI,MAAM,KAAK,QAAL,GAAgB,IAA1B;AACA,mBAAO,KAAK,MAAL,CAAY,MAAZ,EAAoB,GAApB,EAAyB,IAAzB,EACF,IADE,CACG,KAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB,CADH,EAEF,KAFE,CAEI,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,CAFJ,CAAP;AAGH;;;;;;;;;;;uCAQc,MAAM;AACjB,mBAAO,KAAK,KAAL,CAAW,KAAK,QAAhB,CAAP;AACH;;;;;;;;;;8BAOK,MAAM;AACR,oBAAQ,GAAR,CAAY,IAAZ;AACA,gBAAI,SAAS,KAAK,KAAL,CAAW,IAAX,CAAb;AACA,mBAAO,IAAI,KAAK,WAAT,CAAqB,MAArB,CAAP;AACH;;;;;;;;;;;sCAQa,MAAM;AAChB,mBAAO,IAAP;AACH","file":"consumerjs.js","sourcesContent":["/**\n * Base class for object derived from Consumer\n * @abstract\n */\nexport class ConsumerObject {\n  /**\n   * Creates a new object\n   * @param {Object} [data] Data to parse\n   * @param {Consumer} [consumer] Consumer instance for this object\n   */\n  constructor(data,  consumer) {\n    if (typeof data !== 'undefined') {\n      this.createFromObject(data);\n    }\n\n    if (typeof consumer !== 'undefined') {\n      this.consumer = consumer;\n    }\n  }\n\n  /**\n   * Populates object with data consumed in data\n   * @param {Object} data Data to parse\n   */\n  createFromObject(data) {\n    let keys = Object.keys(data);\n\n    for (let i in keys) {\n      let key = keys[i];\n      this[key] = data[key];\n    }\n  }\n}","import { HttpClient } from 'aurelia/http-client';\nimport { initialize } from 'aurelia/pal-browser';\n\n\n/**\n * Instantiate to request API endpoints\n * @class\n */\nexport class Consumer {\n    /** Base API endpoint */\n    endpoint = '';\n\n    /** Class to instantiate data to */\n    objectClass = {};\n\n    /** HttpClient instance */\n    client = new HttpClient().configure(x => {\n        x.withBaseUrl(this.endpoint);\n    });\n\n    /**\n     * Constructor\n     * Sets endpoint to retrieve data from and class to cast result to\n     * Initializes Aurelia/pal-browser\n     * @param {String} endpoint Base endpoint for this API\n     * @param {ConsumerObject} objectClass Class to cast results to\n     */\n    constructor(endpoint, objectClass) {\n        this.endpoint = endpoint;\n        this.objectClass = objectClass;\n\n        initialize();\n    }\n\n    /**\n     * Performs a DELETE request\n     * @param {String} path Path on the endpoint\n     * @returns {Promise}\n     */\n    delete(path = '') {\n        return this.request('delete', path, {});\n    }\n\n    /**\n     * Performs a GET request\n     * @param {String} path Path on the endpoint\n     * @param {Object} query Query parameters\n     * @returns {Promise}\n     */\n    get(path = '', query = {}) {\n        return this.request('get', path, query);\n    }\n\n    /**\n     * Performs a PATCH request\n     * @param {String} path Path on the endpoint\n     * @param {Object} data Data payload\n     * @returns {Promise}\n     */\n    patch(path = '', data = {}) {\n        return this.request('patch', path, data);\n    }\n\n    /**\n     * Performs a POST request\n     * @param {String} path Path on the endpoint\n     * @param {Object} data Data payload\n     * @returns {Promise}\n     */\n    post(path = '', data = {}) {\n        return this.request('post', path, data);\n    }\n\n    /**\n     * Performs a PUT request\n     * @param {String} path Path on the endpoint\n     * @param {Object} data Data payload\n     * @returns {Promise}\n     */\n    put(path = '', data = {}) {\n        return this.request('put', path, data);\n    }\n\n    /**\n     * Performs a request\n     * @param {String} method The method to use\n     * @param {String} path Path on the endpoint\n     * @param {Object} data Data payload\n     */\n    request(method, path, data) {\n        let url = this.endpoint + path;\n        return this.client[method](url, data)\n            .then(this.requestSuccess.bind(this))\n            .catch(this.requestFailed.bind(this));\n    }\n\n    /**\n     * Callback for request\n     * Gets called if request resolve successfully\n     * @param {HttpResponseMessage} data\n     * @returns {ConsumerObject}\n     */\n    requestSuccess(data) {\n        return this.parse(data.response);\n    }\n\n    /**\n     * Parses JSON string to ConsumerObject\n     * @param {String} data\n     * @returns {ConsumerObject}\n     */\n    parse(json) {\n        console.log(json)\n        let object = JSON.parse(json);\n        return new this.objectClass(object);\n    }\n\n    /**\n     * Callback for request\n     * Gets called if request doesnt resolve successfully\n     * @param {HttpResponseMessage} data\n     * @returns {HttpResponseMessage} data\n     */\n    requestFailed(data) {\n        return data;\n    }\n}"]}