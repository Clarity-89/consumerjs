{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"urijs\"","webpack:///external \"axios\"","webpack:///external \"aurelia-cookie\"","webpack:///./src/abstract-http-client.js","webpack:///./src/http-response-message.js","webpack:///./src/axios-http-client.js","webpack:///./src/abstract-list.js","webpack:///./src/list.js","webpack:///./src/utils.js","webpack:///./src/abstract-consumer.js","webpack:///./src/consumer.js","webpack:///./src/abstract-consumer-object.js","webpack:///./src/consumer-object.js","webpack:///./src/crud-consumer-object.js","webpack:///./src/crud-consumer.js","webpack:///./src/abstract-page-number-list.js","webpack:///./src/page-number-list.js","webpack:///./src/linked-page-number-list.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","global","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","AbstractHTTPClient","consumer","options","_classCallCheck","this","baseURL","endpoint","headers","defaultHeaders","arrayFormat","assign","arguments","length","undefined","Promise","reject","path","match","replace","HttpResponseMessage","response","http_response_message_classCallCheck","responseType","statusCode","statusText","concat","trim","AxiosHTTPClient","_AbstractHTTPClient","_this","axios_http_client_classCallCheck","_getPrototypeOf","cancelSource","CancelToken","source","_assertThisInitialized","_inherits","data","query","axios","configured","interceptors","use","createResponse","createError","cancelToken","token","params","transformResponse","json","paramsSerializer","serializeParams","JSON","stringify","withCredentials","csrfProtection","xsrfCookieName","csrfCookie","xsrfHeaderName","csrfHeader","_this2","entries","reduce","acc","_ref","_ref2","_slicedToArray","keyStr","Array","isArray","join","requestMessage","request","status","error","parseInt","e","__CANCEL__","Boolean","axiosPromise","promise","thrown","isCancel","abort","cancel","method","uri","URI","toString","toLowerCase","getURL","getConfiguration","withAbort","AbstractList","_Array","objects","_getPrototypeOf2","responseData","abstract_list_classCallCheck","abstract_list_possibleConstructorReturn","abstract_list_getPrototypeOf","apply","keys","__consumer__","abstract_list_inherits","_wrapNativeSuper","List","_AbstractList","list_classCallCheck","list_possibleConstructorReturn","list_getPrototypeOf","list_inherits","diff","objOld","objNew","result","_i","_Object$keys","valueOld","valueNew","objDiff","isObject","_i2","_Object$keys2","excludeUnserializableFields","unserializableFields","_i3","_Object$entries","_Object$entries$_i","utils_slicedToArray","indexOf","AbstractConsumer","objectClass","abstract_consumer_classCallCheck","contentType","Accept","defaultParameters","listClass","parserDataPath","client","build","buildQuery","clientPromise","consumerPromise","setBaseURL","addHeader","header","addQuery","serialize","then","requestSuccess","requestFailed","AureliaCookie","parse","resolve","parserObject","split","forEach","part","parseList","parseScalar","array","consumerObjects","map","parseEntity","Consumer","_AbstractConsumer","consumer_classCallCheck","consumer_possibleConstructorReturn","consumer_getPrototypeOf","consumer_inherits","AbstractConsumerObject","abstract_consumer_object_classCallCheck","createFromObject","ConsumerObject","_AbstractConsumerObje","consumer_object_classCallCheck","consumer_object_possibleConstructorReturn","consumer_object_getPrototypeOf","consumer_object_inherits","CrudConsumerObject","crud_consumer_object_classCallCheck","crud_consumer_object_possibleConstructorReturn","crud_consumer_object_getPrototypeOf","__initial_state__","crud_consumer_object_inherits","getPath","newState","changedState","getChangedFields","Error","patch","_this3","put","pk","getPK","id","crud_consumer_object_slicedToArray","CrudConsumer","crud_consumer_classCallCheck","crud_consumer_possibleConstructorReturn","crud_consumer_getPrototypeOf","push","crud_consumer_inherits","_get","AbstractPageNumberList","abstract_page_number_list_classCallCheck","abstract_page_number_list_possibleConstructorReturn","abstract_page_number_list_getPrototypeOf","currentMethod","currentPath","currentData","pageField","pageQueryParam","page","pageCountField","pageCount","pageSize","abstract_page_number_list_inherits","goToPage","Math","max","min","forceGet","requestPage","setSearch","PageNumberList","_AbstractPageNumberLi","page_number_list_classCallCheck","page_number_list_possibleConstructorReturn","page_number_list_getPrototypeOf","page_number_list_inherits","LinkedPageNumberList","linked_page_number_list_classCallCheck","linked_page_number_list_possibleConstructorReturn","linked_page_number_list_getPrototypeOf","linked_page_number_list_inherits","previous","next","__webpack_exports__","crud_consumer_CrudConsumer","crud_consumer_object_CrudConsumerObject","abstract_page_number_list_AbstractPageNumberList","axios_http_client_AxiosHTTPClient","utils_namespaceObject"],"mappings":"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","file":"consumerjs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"urijs\");","module.exports = require(\"axios\");","module.exports = require(\"aurelia-cookie\");","/** @module */\nimport {AbstractConsumer} from './abstract-consumer';\n\n/* jshint unused: false */\n\n/**\n * Abstract base class for http clients.\n * @abstract\n */\nexport class AbstractHTTPClient {\n    /**\n     * Configures HTTPClient instance.\n     * @param {AbstractConsumer} consumer Reference to consumer instantiating this object.\n     */\n    constructor(consumer, options) {\n        /** {AbstractConsumer} Reference to consumer instantiating this object. */\n        this.consumer = consumer;\n\n        /** @type {string} Base URL for all requests, gets concatenated with path passed to request methods. */\n        this.baseURL = this.consumer.endpoint;\n\n        /** @type {Object} An optional object holding key value pairs of additional headers. */\n        this.headers = this.consumer.defaultHeaders;\n\n        /** @type {string} - How to shape array query parameters: \"repeat\" or \"brackets\". */\n        this.arrayFormat = 'repeat';\n\n        if (options) {\n            Object.assign(this, options);\n        }\n    }\n\n    /**\n     * Sets the base url for all requests.\n     * @param baseURL\n     */\n    setBaseURL(baseURL) {\n        this.baseURL = baseURL;\n    }\n\n    /**\n     * Adds header to all requests.\n     * @param {string} name\n     * @param {string} value\n     */\n    addHeader(name, value) {\n        this.headers[name] = value;\n    }\n\n    /**\n     * Performs a DELETE request.\n     * @param {string} [path] Path on the endpoint.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    delete(path = '', data = {}) {\n        return Promise.reject('Not implemented!');\n    }\n\n    /**\n     * Performs a GET request.\n     * @param {string} [path] Path on the endpoint.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    get(path = '', data = {}) {\n        return Promise.reject('Not implemented!');\n    }\n\n    /**\n     * Performs a PATCH request.\n     * @param {string} [path] Path on the endpoint.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    patch(path = '', data = {}) {\n        return Promise.reject('Not implemented!');\n    }\n\n    /**\n     * Performs a POST request.\n     * @param {string} [path] Path on the endpoint.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    post(path = '', data = {}) {\n        return Promise.reject('Not implemented!');\n    }\n\n    /**\n     * Performs a PUT request.\n     * @param {string} [path] Path on the endpoint.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    put(path = '', data = {}) {\n        return Promise.reject('Not implemented!');\n    }\n\n    /**\n     * Returns the full path based this.baseURL and path.\n     * @param {string} path\n     * @returns {string}\n     */\n    getURL(path) {\n        path = path + '';\n\n        if (path.match('://')) {\n            return path;\n        } else if (path) {\n            let concatenatedURL = this.baseURL + '/' + path;\n            return concatenatedURL.replace(/([^:])\\/\\/+/g, '$1/');  // Removes double slashes (//) in path.\n        }\n\n        return this.baseURL;\n    }\n}\n","/** @module */\n\n/**\n * Response object modeled after aurelia-http-client HTTPResponseMessage.\n * @class\n */\nexport class HttpResponseMessage {\n    /**\n     * Creates HttpResponseMessage.\n     * @param {Object} response\n     */\n    constructor(response) {\n        /** @type {Object} */\n        this.headers = {};\n\n        /** @type {Object} */\n        this.response = {};\n\n        /** @type {Object} */\n        this.responseType = 'text/json';\n\n        /** @type {Object} */\n        this.statusCode = 0;\n\n        /** @type {Object} */\n        this.statusText = '';\n\n        if (response) {\n            Object.assign(this, response);\n        }\n    }\n\n    /**\n     * Creates a string representation for this HttpResponseMessage.\n     * @returns {string}\n     */\n    toString() {\n        return `${this.statusCode} ${this.statusText}`.trim();\n    }\n}\n","/** @module */\nimport axios, {CancelToken} from 'axios';\nimport URI from 'urijs';\n\nimport {AbstractHTTPClient} from './abstract-http-client';\nimport {HttpResponseMessage} from './http-response-message';\n\n/**\n * HTTP client based on Axios.\n * (Response) interface is modeled after aurelia-http-client.\n * @class\n */\nexport class AxiosHTTPClient extends AbstractHTTPClient {\n    /**\n     * Configures HTTPClient instance.\n     * @param {AbstractConsumer} consumer Reference to consumer instantiating this object.\n     * @param {Object} [options] Additional configuration.\n     */\n    constructor(consumer, options) {\n        super(consumer, options);\n\n        /** @type {Object} */\n        this.cancelSource = CancelToken.source();\n\n        if (options) {\n            Object.assign(this, options);\n        }\n    }\n\n    /**\n     * Returns the configuration for axios based on this.headers and query.\n     * Makes sure the response schema closely matches former versions using aurelia-http-client.\n     * @param {Object} [data] Data payload.\n     * @param {Object} [query] Query parameters.\n     * @returns {Object}\n     */\n    getConfiguration(data, query) {\n        // Makes sure the response schema closely matches former versions using aurelia-http-client.\n        if (!axios.configured) {\n            axios.interceptors.response.use(this.createResponse.bind(this), this.createError.bind(this));\n            axios.configured = true;\n        }\n\n        // Returns the configuration for axios based on this.headers and query.\n        return {\n            cancelToken: this.cancelSource.token,\n            headers: this.headers,\n            params: query,\n            transformResponse: json => json,  // Use Consumer instance for parsing.\n            paramsSerializer: this.serializeParams.bind(this),\n            data: JSON.stringify(data),  // Bypass Axios serializer for data.\n            withCredentials: this.consumer.csrfProtection,\n            xsrfCookieName: this.consumer.csrfCookie,\n            xsrfHeaderName: this.consumer.csrfHeader\n        };\n    }\n\n    /**\n     * Serialize params to take this.arrayFormat into account.\n     * @param {Object} params\n     * @return {Object}\n     */\n    serializeParams(params) {\n        const querystring = Object.entries(params).reduce((acc, [key, value]) => {\n            let keyStr = `&${key}=`;\n\n            if (this.arrayFormat === 'brackets') {\n                keyStr = `&${key}[]=`;\n            }\n\n            if (Array.isArray(value)) {\n                value = value.join(keyStr);\n            }\n            return acc + keyStr + value;\n        }, '');\n        return querystring.replace('&', '');\n    }\n\n    /**\n     * Converts Axios response to HttpResponseMessage.\n     * @param {Object} response\n     * @returns {HttpResponseMessage}\n     */\n    createResponse(response) {\n        return new HttpResponseMessage({\n            headers: response.headers,\n            requestMessage: response.request,\n            response: response.data,\n            responseType: 'text/json',\n            statusCode: response.status,\n            statusText: response.statusText\n        });\n    }\n\n    /**\n     * Converts Axios error to HttpResponseMessage.\n     * @param error\n     * @returns {Promise<never>}\n     */\n    createError(error) {\n        let statusCode;\n\n        try {\n            if (typeof error === 'string') {\n                statusCode = parseInt(error.match(/\\d+/)[0]);\n            } else {\n                statusCode = error.response.status;\n            }\n        } catch (e) {\n            statusCode = 0;\n        }\n\n        return Promise.reject(new HttpResponseMessage({\n            statusCode: statusCode,\n            statusText: error,\n            __CANCEL__: Boolean(error.__CANCEL__),\n        }));\n    }\n\n    /**\n     * Adds/implements abort (and cancel) methods to Axios provided promise.\n     * @param {Promise} axiosPromise\n     * @returns {Promise}\n     */\n    withAbort(axiosPromise) {\n        let promise = axiosPromise\n            .catch(thrown => {\n                if (axios.isCancel(thrown)) {\n                    return Promise.reject(new HttpResponseMessage({\n                        response: thrown,\n                        responseType: 'abort',\n                        statusCode: 0,\n                        statusText: '',\n                    }));\n                } else {\n                    return Promise.reject(thrown);\n                }\n            });\n\n        promise.abort = this.cancelSource.cancel;\n        promise.cancel = this.cancelSource.cancel;\n        return promise;\n    }\n\n    /**\n     * Performs a DELETE request.\n     * @param {string} [path] Path on the endpoint.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    delete(path = '', data = {}) {\n        return this.request('delete', path, data);\n    }\n\n    /**\n     * Performs a GET request.\n     * @param {string} [path] Path on the endpoint.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    get(path = '', data = {}) {\n        return this.request('get', path, data);\n    }\n\n    /**\n     * Performs a PATCH request.\n     * @param {string} [path] Path on the endpoint.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    patch(path = '', data = {}) {\n        return this.request('patch', path, data);\n    }\n\n    /**\n     * Performs a POST request.\n     * @param {string} [path] Path on the endpoint.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    post(path = '', data = {}) {\n        return this.request('post', path, data);\n    }\n\n    /**\n     * Performs a PUT request.\n     * @param {string} [path] Path on the endpoint.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    put(path = '', data = {}) {\n        return this.request('put', path, data);\n    }\n\n    /**\n     * Performs the Axios request.\n     * @param {string} method The method to use.\n     * @param {string} [path] Path on the endpoint.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    request(method, path = '', data = {}) {\n        let uri = URI(path);\n        let query = uri.query(true);\n        uri.query(false);\n        path = uri.toString();\n\n        method = method.toLowerCase();\n        let promise;\n\n        if (method === 'get' || method === 'delete') {\n            promise = axios[method](this.getURL(path), this.getConfiguration(data, query));\n        } else {\n            promise = axios[method](this.getURL(path), data, this.getConfiguration(data, query));\n        }\n        return this.withAbort(promise);\n    }\n}\n","/** @module */\n\n/**\n * Abstract base class for list of consumer objects.\n * @abstract\n */\nexport class AbstractList extends Array {\n    /**\n     * Creates a new object.\n     * @param {AbstractConsumerObject[]} objects Items to populate list with.\n     * @param {Consumer} consumer Consumer instance for this object.\n     * @param {Object} responseData The response data as Object.\n     */\n    constructor(objects, consumer, responseData={}) {\n        super(...objects);\n\n        /** {Object} The response data as Object. */\n        this.responseData = responseData;\n\n        let keys = Object.keys(responseData);\n\n        for (let i in keys) {\n            if (keys.hasOwnProperty(i)) {\n                let key = keys[i];\n                this.responseData[key] = responseData[key];\n            }\n        }\n\n        /** {AbstractConsumer} Reference to consumer instantiating this object. */\n        this.__consumer__ = consumer;\n    }\n}\n","/** @module */\nimport { AbstractList } from './abstract-list';\n\n\n/**\n * List of consumer objects.\n * @class\n */\nexport class List extends AbstractList {}\n","/** @module */\n\n/**\n * Returns a new object describing the changed field in objNew.\n * Each field is compared against objOld:\n * - Only changed fields are included.\n * - Arrays are considered as a single entity (if one items differs, the entire array is considered changed).\n * - Objects are checked recusively.\n * - Primitives are checked by value.\n * @param  {Object} objOld\n * @param  {Object} objNew\n * @returns {Object}\n */\nexport function diff(objOld, objNew) {  // jshint maxdepth:3\n    let result = {};\n\n    for (let key of Object.keys(objNew)) {\n        let valueOld = (objOld) ? objOld[key] : null,\n            valueNew = objNew[key];\n\n        // Arrays are considered as a single entity (if one items differs, the array is considered changed).\n        if (Array.isArray(valueNew)) {\n            let objDiff =  diff(valueNew, valueOld);\n\n            // No items in object (inital value), discard this key.\n            if (!Object.keys(objDiff).length) {\n                continue;\n            }\n\n            result[key] = valueNew;\n        }\n\n\n        // Objects are checked recusively.\n        else if (isObject(valueNew)) {\n            let objDiff =  diff(valueOld, valueNew);\n\n            // No items in object (inital value), discard this key.\n            if (!Object.keys(objDiff).length) {\n                continue;\n            }\n\n            result[key] = objDiff;\n        }\n\n        // Primitives are checked by value.\n        else {\n            // No difference beweteen valueNew and valueOld, discard this key.\n            if (valueNew === valueOld) {\n                continue;\n            }\n\n            result[key] = valueNew;\n        }\n    }\n\n    for (let key of Object.keys(objOld)) {\n        let valueNew = objNew[key];\n\n        if (!valueNew) {\n            result[key] = null;\n        }\n    }\n\n    return result;\n}\n\n\n/**\n * Returns object without keys listed in object.unserializableFields.\n * @param {Object} object\n * @param {string[]} [unserializableFields=object.\\_\\_consumer\\_\\_.unserializableFields]\n * @returns {Object}\n */\nexport function excludeUnserializableFields(object, unserializableFields=object.__consumer__.unserializableFields) {\n    let result = {};\n\n    for (let [key, value] of Object.entries(object)) {\n        if (unserializableFields.indexOf(key) > -1) {\n            continue;\n        }\n\n        result[key] = value;\n    }\n    return result;\n}\n\n\n/**\n * Returns whether object is an object.\n * @param {*} object\n * @returns {boolean}\n */\nexport function isObject(object) {\n    return Object.prototype.toString.call(object) === '[object Object]';\n}\n","/** @module */\nimport { AureliaCookie } from 'aurelia-cookie';\nimport URI from 'urijs';\n\nimport { AxiosHTTPClient } from './axios-http-client';\nimport { List } from './list';\nimport { excludeUnserializableFields, isObject } from './utils';\n\n\n/**\n * Abstract base class for all consumers.\n * @abstract\n */\nexport class AbstractConsumer {\n    /**\n     * Configures Consumer instance.\n     * @param {string} endpoint Base endpoint for this API.\n     * @param {AbstractConsumerObject} objectClass Class to cast results to.\n     * @param {Object} [options] Additional configuration.\n     */\n    constructor(endpoint, objectClass, options=null) {\n        /** {string} The value of the Content-Type header. */\n        this.contentType = 'application/json';\n\n        /** {boolean} Wheter CSRF prtection is active. */\n        this.csrfProtection = true;\n\n        /** {string} The name for the CSRF cookie. */\n        this.csrfCookie = 'csrftoken';\n\n        /** {string} The name for the CSRF header. */\n        this.csrfHeader = 'X-CSRFToken';\n\n        /** {Object} An optional object holding key value pairs of additional headers. */\n        this.defaultHeaders = {\n            'Accept': 'application/json',\n        };\n\n        /** {Object} An optional object holding key value pairs of additional query parameters.*/\n        this.defaultParameters = {};\n\n        /** {string} The base API endpoint prefixed for all requests. */\n        this.endpoint = endpoint;\n\n        /** {Function} The class to casts objects to. */\n        this.objectClass = objectClass;\n\n        /** {Function} The class to use for lists. */\n        this.listClass = List;\n\n        /** {string} An optional dot separated path to the received objectClass' data. */\n        this.parserDataPath = '';  // TODO: Specify for both list and object.\n\n        /** {string[]} Keys on this.objectClass that should not be passed to the API. */\n        this.unserializableFields = ['__consumer__'];\n\n        /** {AbstractHTTPClient} The HttpClient instance to work with. */\n        this.client = new AxiosHTTPClient(this);\n\n        if (options) {\n            Object.assign(this, options);\n        }\n    }\n\n    /**\n     * Performs a DELETE request.\n     * @param {string} path Path on the endpoint.\n     * @param {Object} query Query parameters.\n     * @returns {Promise}\n     */\n    delete(path = '', query = {}) {\n        let uri = URI.build({'path': path, 'query': URI.buildQuery(query)});\n        return this.request('delete', uri, {});\n    }\n\n    /**\n     * Performs a GET request.\n     * @param {string} path Path on the endpoint.\n     * @param {Object} query Query parameters.\n     * @returns {Promise}\n     */\n    get(path = '', query = {}) {\n        let uri = URI.build({'path': path + '', 'query': URI.buildQuery(query)});\n        return this.request('get', uri, {});\n    }\n\n    /**\n     * Performs a PATCH request.\n     * @param {string} path Path on the endpoint.\n     * @param {Object} data Data payload.\n     * @returns {Promise}\n     */\n    patch(path = '', data = {}, query = {}) {\n        let uri = URI.build({'path': path, 'query': URI.buildQuery(query)});\n        return this.request('patch', uri, data);\n    }\n\n    /**\n     * Performs a POST request.\n     * @param {string} path Path on the endpoint.\n     * @param {Object} data Data payload.\n     * @returns {Promise}\n     */\n    post(path = '', data = {}, query = {}) {\n        let uri = URI.build({'path': path, 'query': URI.buildQuery(query)});\n        return this.request('post', uri, data);\n    }\n\n    /**\n     * Performs a PUT request.\n     * @param {string} path Path on the endpoint.\n     * @param {Object} data Data payload.\n     * @returns {Promise}\n     */\n    put(path = '', data = {}, query = {}) {\n        let uri = URI.build({'path': path, 'query': URI.buildQuery(query)});\n        return this.request('put', uri, data);\n    }\n\n    /**\n     * Performs a request.\n     * @param {string} method The method to use.\n     * @param {string} [path] Path on the endpoint, may contain query parameters for backwards compatibility.\n     * @param {Object} [data] Data payload.\n     * @returns {Promise}\n     */\n    request(method, path='', data={}) {\n        let clientPromise;\n        let consumerPromise;\n\n        // Set base url\n        this.client.setBaseURL(this.endpoint);\n\n        // Set content type\n        this.addHeader('Content-Type', this.contentType);\n\n        // Set default headers\n        for (let header of Object.keys(this.defaultHeaders)) {\n            this.addHeader(header, this.defaultHeaders[header]);\n        }\n\n        // Build query\n        let uri = URI(path);\n        uri.addQuery(this.defaultParameters);\n\n        // Serialize data\n        data = this.serialize(data);\n\n        // Return cancellable promise\n        clientPromise = this.client[method](uri.toString(), data);\n        consumerPromise = clientPromise\n                .then(response => this.requestSuccess(response, method, uri.toString(), data))\n                .catch(this.requestFailed.bind(this));\n\n        consumerPromise.abort = clientPromise.abort;\n        consumerPromise.cancel = clientPromise.cancel;\n        return consumerPromise;\n    }\n\n    /**\n     * Wrapper for Cookie.get.\n     * @param {string} name\n     * @returns {string}\n     */\n    getCookie(name) {\n        return AureliaCookie.get(name);\n    }\n\n    /**\n     * Adds a header to all future request.\n     * @param {string} name\n     * @param {string} value\n     */\n    addHeader(name, value) {\n        this.client.addHeader(name, value);\n    }\n\n    /**\n     * Serializes data.\n     * Returns data if data is not an object.\n     * Excludes fields marked in this.unserializableFields.\n     * @param {(AbstractConsumerObject|*)} data\n     * @returns {*}\n     */\n    serialize(data) {\n        // Returns data if data is not an object\n        if (!isObject(data)) {\n            return data;\n        }\n\n        // Excludes fields marked in this.unserializableFields\n        return excludeUnserializableFields(data, this.unserializableFields);\n    }\n\n    /**\n     * Callback for request.\n     * Gets called if request resolve successfully.\n     * @param {HttpResponseMessage} response\n     * @param {string} method The request method.\n     * @param {string} path The request path.\n     * @param {Object} data The request data payload.\n     * @returns {(AbstractConsumerObject|AbstractList)}\n     */\n    requestSuccess(response, method, path, data) {\n        let result = this.parse(response.response, method, path, data);\n        return Promise.resolve(result);\n    }\n\n    /**\n     * Parses JSON string to a single or list of AbstractConsumerObject instance(s).\n     * @param {string} json The response json.\n     * @param {string} method The request method.\n     * @param {string} path The request path.\n     * @param {Object} data The request data payload.\n     * @returns {(AbstractConsumerObject|AbstractList|undefined)}\n     */\n    parse(json, method, path, data) {\n        if (!json) {\n            return;\n        }\n\n        // Convert json to object.\n        let object = json;\n        if (typeof json === 'string') {\n            object = JSON.parse(json);\n        }\n\n        // Extract the relevant data.\n        let parserObject = JSON.parse(JSON.stringify(object)); // Clone.\n        if (this.parserDataPath) {\n            let parts = this.parserDataPath.split('.');\n            parts.forEach(part => {\n                parserObject = parserObject[part];\n            });\n        }\n\n        // this.parserDataPath was not found in response.\n        if (!parserObject) {\n            parserObject = object;\n        }\n\n        // Parse as list if response is a array.\n        if (Array.isArray(parserObject)) {\n            return this.parseList(parserObject, object, method, path, data);\n        }\n\n        // Parse as single item otherwise.\n        return this.parseScalar(parserObject, object, method, path, data);\n    }\n\n    /**\n     * Parses anonymous objects to a list of AbstractConsumerObjects.\n     * Gets called when result JSON.parse is an array.\n     * @param {Object[]} array\n     * @param {Object} responseData The response data as Object.\n     * @param {string} method The request method.\n     * @param {string} path The request path.\n     * @param {Object} data The request data payload.\n     * TODO: Cleanup\n     * @returns {AbstractList}\n     */\n    parseList(array, responseData, method, path, data) {\n        let consumerObjects = array.map(object => this.parseEntity(object, responseData, method, path, data));\n        return new this.listClass(consumerObjects, this, responseData, method, path, data);\n    }\n\n    /**\n     * Parses anonymous object to a single AbstractConsumerObject.\n     * Gets called when result JSON.parse is not an array.\n     * @param {Object} object\n     * @param {Object} responseData The response data as Object.\n     * @param {string} method The request method.\n     * @param {string} path The request path.\n     * @param {Object} data The request data payload.\n     * TODO: Cleanup, rename\n     * @returns {AbstractConsumerObject}\n     */\n    parseScalar(object, responseData, method, path, data) {\n        return this.parseEntity(object, responseData, method, path, data);\n    }\n\n    /**\n     * Parses anonymous object to a single AbstractConsumerObject.\n     * @param {Object} object\n     * @param {Object} responseData The response data as Object.\n     * @param {string} method The request method.\n     * @param {string} path The request path.\n     * @param {Object} data The request data payload.\n     * @returns {AbstractConsumerObject}\n     */\n    parseEntity(object, responseData, method, path, data) {  // jshint ignore:line\n        return new this.objectClass(object, this);\n    }\n\n    /**\n     * Callback for request.\n     * Gets called if request doesnt resolve successfully.\n     * @param {HttpResponseMessage} data\n     * @returns {HttpResponseMessage} data\n     */\n    requestFailed(data) {\n        return Promise.reject(data);\n    }\n}\n","/** @module */\nimport { AbstractConsumer } from './abstract-consumer';\n\n\n/**\n * Extend, instantiate and configure to request API endpoints.\n * @see {@link abstract-consumer.md} for inherited API.\n * @abstract\n */\nexport class Consumer extends AbstractConsumer {}\n","/** @module */\n\n/**\n * Abstract base class for object derived from Consumer\n * @abstract\n */\nexport class AbstractConsumerObject {\n    /**\n     * Creates a new object.\n     * @param {Object} data Data to parse.\n     * @param {Consumer} consumer Consumer instance for this object.\n     */\n    constructor(data, consumer) {\n        this.createFromObject(data);\n\n        /** {AbstractConsumer} Reference to consumer instantiating this object. */\n        this.__consumer__ = consumer;\n    }\n\n    /**\n     * Populates object with data consumed in data.\n     * @param {Object} data Data to parse.\n     */\n    createFromObject(data) {\n        let keys = Object.keys(data);\n\n        for (let i in keys) {\n            if (keys.hasOwnProperty(i)) {\n                let key = keys[i];\n                this[key] = data[key];\n            }\n        }\n    }\n}\n","/** @module */\nimport { AbstractConsumerObject } from './abstract-consumer-object';\n\n\n/**\n * Base class for object derived from Consumer.\n * Should be extended to provide methods for objects.\n * @see {@link abstract-consumer-object.md} for inherited API.\n * @abstract\n */\nexport class ConsumerObject extends AbstractConsumerObject {}\n","/** @module */\nimport { AbstractConsumerObject } from './abstract-consumer-object';\nimport { diff, excludeUnserializableFields } from './utils';\n\n\n/**\n * Base class for object derived from Consumer.\n * Contains various methods for common CRUD tasks.\n * Should be extended to provide methods for objects.\n * @see {@link abstract-consumer-object.md} for inherited API.\n * @abstract\n */\nexport class CrudConsumerObject extends AbstractConsumerObject {\n    /**\n     * Creates a new object.\n     * @param {Object} data Data to parse.\n     * @param {CrudConsumer} consumer Consumer instance for this object.\n     */\n    constructor(data, consumer) {\n        super(data, consumer);\n\n        /** {Object} A clone of the initial state before any modifications were made. */\n        this.__initial_state__ = JSON.parse(JSON.stringify(data));  // Create a rough clone\n    }\n\n    /**\n     * Partially Updates the object by performing a PATCH request.\n     * Only sends the changed fields as data.\n     * If no fields have changed, request is omitted and a resolving Promise is returned.\n     * After the requests resolves the initial state is updated (to allow future change detections).\n     * @returns {Promise}\n     */\n    update() {\n        let path = this.getPath(),\n            newState = excludeUnserializableFields(this),\n            changedState = this.getChangedFields();\n\n\n        if (!path) {\n            throw new Error('Can\\'t determine path, please set pk or id or define getPath()');\n        }\n\n        // If no fields have changed, request is omitted and a resolving Promise is returned\n        if (Object.keys(changedState).length === 0) {\n            return Promise.resolve(this);\n        }\n\n        // Only sends the changed fields as data\n        return this.__consumer__.patch(path, changedState)\n            .then(() => {\n                // After the requests resolves the initial state is updated (to allow future change detections)\n                this.__initial_state__= newState;\n                return Promise.resolve(this);\n            });\n    }\n\n    /**\n     * Fully Updates the object by performing a PUT request.\n     * Sends all fields as data.\n     * After the requests resolves the initial state is updated (to allow future change detections).\n     * @returns {Promise}\n     */\n    save() {\n        let path = this.getPath(),\n            newState = excludeUnserializableFields(this);\n\n        if (!path) {\n            throw new Error('Can\\'t determine path, please set pk or id or define getPath()');\n        }\n\n        // Sends all fields as data\n        return this.__consumer__.put(path, this)\n            .then(() => {\n                // After the requests resolves the initial state is updated (to allow future change detections)\n                this.__initial_state__= newState;\n                return Promise.resolve(this);\n            });\n    }\n\n    /**\n     * Removes this object.\n     * @returns {Promise}\n     */\n    delete() {\n        let path = this.getPath();\n\n        if (!path) {\n            throw new Error('Can\\'t determine path, please set pk or id or define getPath()');\n        }\n\n        return this.__consumer__.delete(path);\n    }\n\n    /**\n     * Returns the path for this object.\n     * Path is assumed to be the primary key.\n     * If no key is found, false is returned.\n     * @returns {(string|false)}\n     */\n    getPath() {\n        let pk =  this.getPK();\n\n        if (pk) {\n            return pk + '';\n        }\n        return false;\n    }\n\n    /**\n     * Tries to return the primary key of this object.\n     * First tries this.pk, this.id otherwise.\n     * If this.pk and this.id are both empty, false is returned.\n     * @returns {(*|false)} Value of pk/id or false.\n     */\n    getPK() {\n        return (this.pk || this.id || false);\n    }\n\n    /**\n     * Returns an object containing the changed properties of this object.\n     * Property names in this.\\_\\_consumer\\_\\_.unserializableFields are ignored.\n     * Properties are compared against this.\\_\\_initial_state\\_\\_.\n     * @returns {Object}\n     */\n    getChangedFields() {\n        let data = {};\n        for (let [key, value] of Object.entries(this)) {\n            // Property names in this.__consumer__.unserializableFields are ignored\n            if (this.__consumer__.unserializableFields.indexOf(key) > -1) {\n                continue;\n            }\n\n            data[key] = value;\n        }\n\n        return diff(this.__initial_state__, excludeUnserializableFields(this));\n    }\n}\n","/** @module */\nimport { AbstractConsumer } from './abstract-consumer';\nimport { CrudConsumerObject } from './crud-consumer-object';\n\n\n/**\n * Extend, instantiate and configure to request API endpoints.\n * Contains various methods for common CRUD tasks.\n * @see {@link abstract-consumer.md} for inherited API.\n * @abstract\n */\nexport class CrudConsumer extends AbstractConsumer {\n    /**\n     * Configures CrudConsumer instance.\n     * @param {string} endpoint Base endpoint for this API.\n     * @param {CrudConsumerObject} [objectClass=CrudConsumerObject] Class to cast results to.\n     * @param {Object} [options] Additional configuration.\n     */\n    constructor(endpoint, objectClass=CrudConsumerObject, options=null) {\n        super(endpoint, objectClass, options);\n\n        // Add __initial_state__ to unserializableFields\n        this.unserializableFields.push('__initial_state__');\n    }\n\n    /**\n     * Creates an object by performing a POST request.\n     * @param {Object} object Object to create.\n     * @returns {Promise}\n     */\n    create(object) {\n        return super.post('', object);\n    }\n\n    /**\n     * Retrieves an object by performing a GET request.\n     * @param {(number|string)} id\n     * @returns {Promise}\n     */\n    read(id) {\n        return super.get(id);\n    }\n}\n","/** @module */\nimport URI from 'urijs';\nimport { AbstractList } from './abstract-list';\n\n\n/**\n * Abstract base class for paginated lists.\n * @see {@link abstract-list.md} for inherited API.\n * @abstract\n */\nexport class AbstractPageNumberList extends AbstractList {\n    /**\n     * @param {AbstractConsumerObject[]} objects Items to populate list with.\n     * @param {Consumer} consumer Consumer instance for this object.\n     * @param {Object} responseData The responseData result as Object.\n     * @param {string} [method='get'] The request method.\n     * @param {string} [path=''] The request path.\n     * @param {Object} [data={}] The request data payload.\n    */\n    constructor(objects, consumer, responseData, method='get', path='', data={}) {\n        super(objects, consumer, responseData, method, path, data);\n\n        /** {string} The method of the request. */\n        this.currentMethod = method;\n\n        /** {string} The path of the request. */\n        this.currentPath = path;\n\n        /** {string} The payload of the request. */\n        this.currentData = data;\n\n        /** {string} The field to recover the page from. */\n        this.pageField = 'page';\n\n        /** {string} The parameter to indicate the request page with. */\n        this.pageQueryParam = 'page';\n\n        /** {number} The current page. */\n        this.page = parseInt(this.responseData[this.pageField]);\n\n        /** {string} The field to recover the amount of page from. */\n        this.pageCountField = 'count';\n\n        /** {number} The amount of pages. */\n        this.pageCount = parseInt(this.responseData[this.pageCountField]);\n\n        /** {number} The amount of objects on a page. */\n        this.pageSize = this.length;\n    }\n\n    /**\n     * Requests the first page.\n     * @returns {Promise}\n     */\n    first() {\n        return this.goToPage(1);\n    }\n\n    /**\n     * Requests the last page.\n     * @returns {Promise}\n     */\n    last() {\n        return this.goToPage(this.pageCount);\n    }\n\n    /**\n     * Requests the previous page.\n     * @returns {Promise}\n     */\n    previous() {\n        return this.goToPage(Math.max(this.page - 1, 1));\n    }\n\n    /**\n     * Requests the next page.\n     * @returns {Promise}\n     */\n    next() {\n        return this.goToPage(Math.min(this.page + 1, this.pageCount));\n    }\n\n    /**\n     * Navigates to page.\n     * Only replays method and payload when forceGet=false.\n     * @param {number} page\n     * @param {boolean} [forceGet=true]\n     */\n    goToPage(page, forceGet=true) {\n        let method = (forceGet) ? 'get' : this.currentMethod;\n        let data =  (forceGet) ? {} : this.currentData;\n        return this.requestPage(page, method, data);\n    }\n\n    /**\n     * Requests a page\n     * @param {number} page\n     * @param {string} method\n     * @param {Object} data\n     * @returns {Promise}\n     */\n    requestPage(page, method, data) {\n        let uri = URI(this.currentPath)\n            .setSearch(this.pageQueryParam, page);\n\n        return this.__consumer__.request(method, uri.toString(), data);\n    }\n}\n","/** @module */\nimport { AbstractPageNumberList } from './abstract-page-number-list';\n\n\n/**\n * A list with page number pagination.\n * @see {@link abstract-page-number-list.md} for inherited API.\n * @class\n */\nexport class PageNumberList extends AbstractPageNumberList {}\n","/** @module */\nimport { AbstractPageNumberList } from './abstract-page-number-list';\n\n\n/**\n * A list with linked page number pagination.\n * @see {@link abstract-page-number-list.md} for inherited API.\n * @class\n */\nexport class LinkedPageNumberList extends AbstractPageNumberList {\n    /**\n     * Requests the previous page.\n     * @returns {Promise}\n     */\n    previous() {\n        if (typeof this.responseData.previous !== 'string') {\n            return Promise.resolve(this);\n        }\n\n        let path = this.responseData.previous;\n        return this.__consumer__.get(path);\n    }\n\n    /**\n     * Requests the next page.\n     * @returns {Promise}\n     */\n    next() {\n        if (typeof this.responseData.next !== 'string') {\n            return Promise.resolve(this);\n        }\n\n        let path = this.responseData.next;\n        return this.__consumer__.get(path);\n    }\n}\n","import { Consumer } from './consumer';\nexport { ConsumerObject } from './consumer-object';\nexport { CrudConsumer } from './crud-consumer';\nexport { CrudConsumerObject } from './crud-consumer-object';\n\nexport { AbstractList } from './abstract-list';\nexport { AbstractPageNumberList } from './abstract-page-number-list';\nexport { List } from './list';\nexport { PageNumberList } from './page-number-list';\nexport { LinkedPageNumberList } from './linked-page-number-list';\n\nexport { AbstractHTTPClient } from './abstract-http-client';\nexport { AxiosHTTPClient } from './axios-http-client';\n\nimport * as utils from './utils';\n\nexport default Consumer;\nexport { Consumer };\nexport { utils };\n"],"sourceRoot":""}